#!/usr/bin/env /usr/local/bin/joker

(ns lib.shell (:require
                [lib.color :as c]
                [joker.string :refer [join trim]]
                [joker.os :refer [exec sh]]))

(defn _ok? [result] (true? (get result :success)))

(defn _merge-outs [result] (trim (join "" [(str (get result :out)) (str (get result :err))])))

(defn sh-v
  "Verbosely execute a script via joker.os/sh."
  [bin & args]
  (apply println (c/cyan "Executing:\t") bin args)
  (let [result (apply sh bin args)]
    (println (c/yellow (_merge-outs result)) (c/cyan "\n  Complete."))
    (_ok? result)))

(defn exec-v
  "Verbosely execute a script via joker.os/exec."
  [bin args]
  (let [opts { :args args :stdin *in* :stdout *out* :err *err*}]
    (apply println (c/cyan "Executing:\t") bin args)
    (let [result (exec bin opts)]
      (println (c/yellow (_merge-outs result)) (c/cyan "\n  Complete."))
      (_ok? result))))

(defn exec-q
  "Quietly execute a script via joker.os/exec"
  [bin args]
  (let [opts { :args args :stdin *in* :stdout *out* :err *err*}
        result (exec bin opts)]
        (_ok? result)))